<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 
<mapper namespace="com.kiosk.app.infra.member.MemberMapper">

	<resultMap type="com.kiosk.app.infra.member.Member" id="resultMapObj"></resultMap>
 
 	<sql id="abc">
 		seq,
 		id,
 		password,
 		name,
 		memberAddress,
 		memberTel,
 		salesType,
 		companyAddress,
 		companyTel,
 		delNy,
 		registerTime
 	</sql>
 	<sql id ="selectCommon">
   		FROM    
	    	kioskAccount
		WHERE 1=1
		and delNy = 1
			<if test="shKeyword != null and !shKeyword.equals('')">
        		AND (id LIKE CONCAT('%',#{shKeyword},'%') OR name LIKE CONCAT('%',#{shKeyword},'%'))
    		</if>
			<!-- <if test="shKeyword != null and !shKeyword.equals('')">AND id LIKE CONCAT('%',#{shKeyword},'%')</if> -->
			
    </sql>

   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>

   	<select id="selectList" resultMap="resultMapObj">
		SELECT aa.* FROM (   	
	   		SELECT
				<include refid="abc" />
	   			<include refid="selectCommon" />
		) aa
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}	   			
   	</select>
 
 
 

 	
 	<select id="selectOne" resultMap="resultMapObj">
 		select
 			<include refid="abc" />
 		from
 			kioskAccount
 		where 1=1
 			and	seq = #{seq}
 			<!-- 문자 검색은 대부분 like를 사용 -->
 	
 	
 	</select>
 	
 	 <select id="selectTwo" resultMap="resultMapObj">
 		select
 			<include refid="abc" />
 		from
 			kioskAccount
 		where 1=1
 			and	id = #{id}
 			and password = #{password}
 			<!-- 문자 검색은 대부분 like를 사용 -->
 	
 	</select>
 	
 	<select id="selectOneCheckId" resultType="Integer">
 		select
 			count(name)
 		from
 			kioskAccount
 		where 1=1
 			and name = #{name}
 	</select>
 	
 			

 	
 	
 	
 <update id="update" >
 	update
 		kioskAccount
 	set
 		id = #{id},
 		password = #{password},
 		name = #{name},
 		memberAddress = #{memberAddress},
 		memberTel = #{memberTel},
 		salesType = #{salesType},
 		companyAddress = #{companyAddress},
 		companyTel = #{companyTel},
 		delNy = #{delNy}
 	where 1=1
 		and seq = #{seq}
 </update>
 
 <delete id="delete">
 	delete
 	from
 		kioskAccount
 	where 1=1
 		and seq = #{seq}
 </delete>
 
 <insert id="insert">
 	insert into kioskAccount
 	(
 		id,
 		password,
 		name,
 		memberAddress,
 		memberTel,
 		salesType,
 		companyAddress,
 		companyTel,
 		delNy
 		)value(
 			#{id},
 			#{password},
 			#{name},
 			#{memberAddress},
 			#{memberTel},
 			#{salesType},
 			#{companyAddress},
 			#{companyTel},
		 <choose>
            <when test="delNy == null or delNy == '' or delNy == 0">
                1
            </when>
            <when test="delNy == '1' or delNy == 1 ">
                1
            </when>
            <otherwise>
                <![CDATA[(SELECT 1/0)]]>
            </otherwise>
        </choose>
 			<!-- 여기에 delNy값을 설정해야함 -->
 		)
 
 </insert>
 	
 <update id="uelete">
	update
 		kioskAccount
 	set
 		delNy = #{delNy}
 	where 1=1
 		and seq = #{seq} 
 </update>
 </mapper>
